name: build

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: write

env:
  BUILD_TYPE: Release

jobs:
  android:
    runs-on: ubuntu-latest

    env:
      PLATFORM: Android

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload Artifact - Debug
        uses: actions/upload-artifact@v5
        with:
          name: retro_brick_game-debug.apk
          path: ${{github.workspace}}/build/outputs/apk/debug/retro_brick_game-debug.apk

      - name: Upload Artifact - Release
        uses: actions/upload-artifact@v5
        with:
          name: retro_brick_game-release.apk
          path: ${{github.workspace}}/build/outputs/apk/release/retro_brick_game-release-unsigned.apk

  web:
    runs-on: ubuntu-latest

    env:
      EMSCRIPTEN_VERSION: 3.1.46
      EMSCRIPTEN_CACHE_FOLDER: emsdk-cache

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Emscripten SDK Cache
        id: cache-system-libraries
        uses: actions/cache@v4
        with:
          path: ${{env.EMSCRIPTEN_CACHE_FOLDER}}
          key: ${{env.EMSCRIPTEN_VERSION}}-${{ runner.os }}

      - name: Setup Emscripten SDK
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{env.EMSCRIPTEN_VERSION}}
          actions-cache-folder: ${{env.EMSCRIPTEN_CACHE_FOLDER}}

      - name: Configure CMake
        run: >
          cmake
          -B "${{github.workspace}}/cmake-build-web"
          -D CMAKE_BUILD_TYPE="${{env.BUILD_TYPE}}"
          -D PLATFORM="Web"
          -D CMAKE_TOOLCHAIN_FILE="${{github.workspace}}/${{env.EMSCRIPTEN_CACHE_FOLDER}}/emsdk-main/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake"
          -D CMAKE_EXE_LINKER_FLAGS="-s USE_GLFW=3"
          -D CMAKE_EXECUTABLE_SUFFIX=".html"

      - name: Build
        run: cmake --build ${{github.workspace}}/cmake-build-web

      - name: Generate index.html
        run: cp -v ${{github.workspace}}/cmake-build-web/retro_brick_game.html ${{github.workspace}}/cmake-build-web/index.html

      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: retro_brick_game-web
          path: |
            ${{github.workspace}}/cmake-build-web/index.html
            ${{github.workspace}}/cmake-build-web/retro_brick_game*

  desktop-windows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install dependencies
        run: sudo apt update -y; sudo apt install -y ninja-build mingw-w64

      - name: Configure CMake
        run: >
          cmake 
          -G Ninja 
          -B ${{github.workspace}}/cmake-build-desktop-windows 
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -D CMAKE_SYSTEM_NAME=Windows
          -D CMAKE_C_COMPILER=x86_64-w64-mingw32-gcc
          -D CMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++

      - name: Build
        run: cmake --build ${{github.workspace}}/cmake-build-desktop-windows

      - name: Create Artifact
        working-directory: ${{github.workspace}}
        run: |
          zip -j cmake-build-desktop-windows/retro_brick_game.zip cmake-build-desktop-windows/retro_brick_game*
          zip -r cmake-build-desktop-windows/retro_brick_game.zip assets

      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: retro_brick_game-windows
          path: ${{github.workspace}}/cmake-build-desktop-windows/retro_brick_game.zip

  desktop-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install raylib dependencies
        run: sudo apt update -y; sudo apt install -y ninja-build libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev

      - name: Configure CMake
        run: cmake -G Ninja -B ${{github.workspace}}/cmake-build-desktop-linux -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/cmake-build-desktop-linux

      - name: Create Artifact
        working-directory: ${{github.workspace}}
        run: |
          zip -j cmake-build-desktop-linux/retro_brick_game.zip cmake-build-desktop-linux/retro_brick_game*
          zip -r cmake-build-desktop-linux/retro_brick_game.zip assets

      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: retro_brick_game-linux
          path: ${{github.workspace}}/cmake-build-desktop-linux/retro_brick_game.zip
